// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Sun May 01 14:48:42 2022

controller controller_inst
(
	.SysClock(SysClock_sig) ,	// input  SysClock_sig
	.StartStop(StartStop_sig) ,	// input  StartStop_sig
	.LDA(LDA_sig) ,	// input  LDA_sig
	.STA(STA_sig) ,	// input  STA_sig
	.ADD(ADD_sig) ,	// input  ADD_sig
	.SUB(SUB_sig) ,	// input  SUB_sig
	.XOR(XOR_sig) ,	// input  XOR_sig
	.INC(INC_sig) ,	// input  INC_sig
	.CLR(CLR_sig) ,	// input  CLR_sig
	.JMP(JMP_sig) ,	// input  JMP_sig
	.JPZ(JPZ_sig) ,	// input  JPZ_sig
	.JPN(JPN_sig) ,	// input  JPN_sig
	.HLT(HLT_sig) ,	// input  HLT_sig
	.C0(C0_sig) ,	// output  C0_sig
	.C1(C1_sig) ,	// output  C1_sig
	.C2(C2_sig) ,	// output  C2_sig
	.C3(C3_sig) ,	// output  C3_sig
	.C4(C4_sig) ,	// output  C4_sig
	.C7(C7_sig) ,	// output  C7_sig
	.C8(C8_sig) ,	// output  C8_sig
	.C9(C9_sig) ,	// output  C9_sig
	.C5(C5_sig) ,	// output  C5_sig
	.C10(C10_sig) ,	// output  C10_sig
	.C11(C11_sig) ,	// output  C11_sig
	.C12(C12_sig) ,	// output  C12_sig
	.C13(C13_sig) ,	// output  C13_sig
	.C14(C14_sig) 	// output  C14_sig
);

defparam controller_inst.A = 'b00000;
defparam controller_inst.B = 'b00001;
defparam controller_inst.C = 'b00010;
defparam controller_inst.D = 'b00011;
defparam controller_inst.E = 'b00100;
defparam controller_inst.F = 'b00101;
defparam controller_inst.G = 'b00110;
defparam controller_inst.H = 'b00111;
defparam controller_inst.I = 'b01000;
defparam controller_inst.J = 'b01001;
defparam controller_inst.K = 'b01010;
defparam controller_inst.L = 'b01011;
defparam controller_inst.M = 'b01100;
defparam controller_inst.N = 'b01101;
defparam controller_inst.O = 'b01110;
defparam controller_inst.P = 'b01111;
defparam controller_inst.Q = 'b10000;
defparam controller_inst.R = 'b10001;
defparam controller_inst.S = 'b10010;
defparam controller_inst.T = 'b10011;
defparam controller_inst.U = 'b10100;
